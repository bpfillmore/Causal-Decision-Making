Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/asyncio/base_events.py", line 685, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
def generate_test_case(setup, N, seed = 0, phi1=None, phi2=None,psi1=None,psi2=None):
    if setup == 'random_binary':
        np.random.seed(seed)
        s1 = np.random.normal(450,150, N)
        A1 = np.random.binomial(1,np.exp(phi1[0]+phi1[1]*s1)/(1+np.exp(phi1[0]+phi1[1]*s1)),size = N)
        s2 = np.random.normal(1.25*s1,60, N)
        A2 = np.random.binomial(1,np.exp(phi2[0]+phi2[1]*s2)/(1+np.exp(phi2[0]+phi2[1]*s2)),size = N)
        A = {}
        A[0] = A1
        A[1] = A2
        mu1 = (psi1[0]+psi1[1]*s1)*((psi1[0]+psi1[1]*s1 >0).astype(int)-A1)
        mu2 = (psi2[0]+psi2[1]*s2)*((psi2[0]+psi2[1]*s2 >0).astype(int)-A2)
        Y_opt = np.random.normal(400+1.6*s1,60)
        Y = Y_opt - mu1 - mu2
        opt_true = {}
        opt_true[0] = (psi1[0]+psi1[1]*s1 >0).astype(int)
        opt_true[1] = (psi2[0]+psi2[1]*s2 >0).astype(int)
        X = np.hstack([np.ones(N)[:, np.newaxis], s1[:, np.newaxis], A1[:, np.newaxis], (s1*A1)[:, np.newaxis], s2[:, np.newaxis]])
        
        instance = {
            'X' : X, 
            'A' : A, 
            'Y' : Y, 
            'optimal_A' : opt_true, 
            'optimal_V' : np.mean(Y_opt),
            'XAY' : [X, A, Y]
        }
        return instance
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 1[0m
[0;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m      2[0m [38;5;28;01mdef[39;00m [38;5;21mgenerate_test_case[39m(setup, N, seed [38;5;241m=[39m [38;5;241m0[39m, phi1[38;5;241m=[39m[38;5;28;01mNone[39;00m, phi2[38;5;241m=[39m[38;5;28;01mNone[39;00m,psi1[38;5;241m=[39m[38;5;28;01mNone[39;00m,psi2[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m      3[0m     [38;5;28;01mif[39;00m setup [38;5;241m==[39m [38;5;124m'[39m[38;5;124mrandom_binary[39m[38;5;124m'[39m:

[0;31mModuleNotFoundError[0m: No module named 'numpy'

